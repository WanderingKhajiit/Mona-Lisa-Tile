{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\list\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, use } from \"react-router-dom\";\nimport { listJobs, updateJob, convertToBase64URL } from \"../utils/api\";\nimport JobList from \"../JobForm/JobList\";\nimport JobEdit from \"../JobForm/JobEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobMenu() {\n  _s();\n  const initialJobState = {\n    neighborhood: \"\",\n    picture: [],\n    worker: \"\",\n    date: \"\"\n  };\n  const {\n    job_id\n  } = useParams();\n  const [job, setJob] = useState({\n    ...initialJobState\n  });\n  const [jobs, setJobs] = useState([]);\n  const [base64URL, setBase64URL] = useState(\"\");\n  useEffect(loadJobs, []);\n  function loadJobs() {\n    const abortController = new AbortController();\n    listJobs(abortController.signal).then(setJobs);\n    return () => abortController.abort();\n  }\n  async function handleChange({\n    target\n  }) {\n    if (target === \"picture\") {\n      const file = target.files[0];\n      const base64DataURL = await convertToBase64URL(file);\n      setBase64URL(base64DataURL);\n    } else {\n      setJob({\n        ...job,\n        [target.name]: target.value\n      });\n    }\n  }\n  ;\n  const submitHandler = async event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    try {\n      //console.log(job)\n      await updateJob(job, job_id, abortController.signal);\n      console.log(\"Job updated\");\n\n      // Additional handling for the updated job, if needed\n    } catch (error) {\n      console.error(\"Error updating job:\", error);\n    }\n    return () => abortController.abort();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/jobs/new\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"links\",\n          children: \"New Listing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(JobEdit, {\n        job: job,\n        handleChange: handleChange,\n        submitHandler: submitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(JobList, {\n        jobs: jobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(JobMenu, \"d3P9Py/+HuH1p1nogMsNUWvDOcA=\", true);\n_c = JobMenu;\nvar _c;\n$RefreshReg$(_c, \"JobMenu\");","map":{"version":3,"names":["React","useEffect","useState","Link","use","listJobs","updateJob","convertToBase64URL","JobList","JobEdit","jsxDEV","_jsxDEV","Fragment","_Fragment","JobMenu","_s","initialJobState","neighborhood","picture","worker","date","job_id","useParams","job","setJob","jobs","setJobs","base64URL","setBase64URL","loadJobs","abortController","AbortController","signal","then","abort","handleChange","target","file","files","base64DataURL","name","value","submitHandler","event","preventDefault","console","log","error","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/list/Menu.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, use } from \"react-router-dom\";\r\nimport { listJobs, updateJob, convertToBase64URL } from \"../utils/api\";\r\nimport JobList from \"../JobForm/JobList\"\r\nimport JobEdit from \"../JobForm/JobEdit\";\r\n\r\nexport default function JobMenu(){\r\n  const initialJobState = {\r\n    neighborhood: \"\",\r\n    picture: [],\r\n    worker: \"\",\r\n    date:\"\"\r\n  };\r\n  const { job_id } = useParams()\r\n  const [job, setJob] = useState({\r\n      ...initialJobState,\r\n    });\r\n\r\n    const [jobs, setJobs] = useState([]);\r\n    const [base64URL, setBase64URL] = useState(\"\")\r\n\r\n    useEffect(loadJobs, [])\r\n    function loadJobs(){\r\n      const abortController = new AbortController();\r\n  \r\n      listJobs(abortController.signal)\r\n        .then(setJobs)\r\n\r\n      return () => abortController.abort()\r\n      }\r\n\r\n      async function handleChange ({ target }) {\r\n        if(target === \"picture\"){\r\n            const file = target.files[0]\r\n            const base64DataURL = await convertToBase64URL(file)   \r\n            setBase64URL(base64DataURL);\r\n            \r\n        }else{\r\n            setJob({\r\n                ...job,\r\n                [target.name]: target.value,\r\n        });\r\n        }\r\n      };\r\n  \r\n  const submitHandler = async (event) => {\r\n      event.preventDefault();\r\n      const abortController = new AbortController()\r\n      \r\n      try {\r\n        //console.log(job)\r\n        await updateJob(job, job_id, abortController.signal);\r\n\r\n        console.log(\"Job updated\");\r\n\r\n        // Additional handling for the updated job, if needed\r\n    } catch (error) {\r\n        console.error(\"Error updating job:\", error);\r\n    } \r\n        return () => abortController.abort();\r\n    \r\n    };\r\n \r\n\r\n    return(\r\n        <>\r\n        <div>\r\n          <Link to={\"/jobs/new\"}><div className=\"links\">New Listing</div></Link>\r\n        </div>\r\n        <section>\r\n          <JobEdit\r\n            job={job}\r\n            handleChange={handleChange}\r\n            submitHandler={submitHandler}\r\n          />\r\n        </section>\r\n        <div>\r\n          <JobList\r\n          jobs={jobs}\r\n          />\r\n        </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}