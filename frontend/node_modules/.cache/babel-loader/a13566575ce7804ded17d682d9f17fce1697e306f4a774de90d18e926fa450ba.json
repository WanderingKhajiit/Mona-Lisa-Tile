{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\JobForm\\\\JobForm.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport hasPermission from \"../perm/Permissions\";\nimport { actions } from \"../perm/Permissions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobForm = ({\n  job,\n  handleChange,\n  submitHandler,\n  setJob,\n  initialJobState\n}) => {\n  if (hasPermissions(file)) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      class: \"formS\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlforfor: \"neighborhood\",\n          children: \"Job Site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"neighborhood\",\n          type: \"text\",\n          name: \"neighborhood\",\n          value: job.neighborhood,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlforfor: \"picture\",\n          children: \"Proof\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"picture\",\n          type: \"file\",\n          name: \"picture\",\n          value: job.picture,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlforfor: \"worker\",\n          children: \"Worker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"worker\",\n          type: \"text\",\n          name: \"worker\",\n          value: job.worker,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlforfor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          value: job.date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setJob({\n          ...initialJobState\n        }),\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  }\n};\n_c = JobForm;\nexport default JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["React","useHistory","hasPermission","actions","jsxDEV","_jsxDEV","JobForm","job","handleChange","submitHandler","setJob","initialJobState","hasPermissions","file","onSubmit","class","children","htmlforfor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","value","neighborhood","onChange","picture","worker","date","onClick","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/JobForm/JobForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport hasPermission from \"../perm/Permissions\";\r\nimport { actions } from \"../perm/Permissions\";\r\n\r\n\r\nexport const JobForm = ({\r\n    job,\r\n    handleChange,\r\n    submitHandler,\r\n    setJob,\r\n    initialJobState\r\n  }) => {\r\n    \r\n      if(hasPermissions(file, )){\r\n\r\n    return(\r\n      \r\n      \r\n    <form onSubmit={submitHandler} class=\"formS\">\r\n        <fieldset>\r\n        <label htmlforfor=\"neighborhood\">Job Site</label>\r\n        <input \r\n        id=\"neighborhood\" \r\n        type=\"text\" \r\n        name=\"neighborhood\" \r\n        value={job.neighborhood}\r\n        onChange={handleChange}/>\r\n        \r\n\r\n        <label htmlforfor=\"picture\">Proof</label>\r\n        <input\r\n        id=\"picture\"\r\n        type=\"file\"\r\n        name=\"picture\"\r\n        value={job.picture}\r\n        onChange={handleChange}\r\n        />\r\n\r\n        <label htmlforfor=\"worker\">Worker</label>\r\n        <input\r\n        id=\"worker\"\r\n        type=\"text\"\r\n        name=\"worker\"\r\n        value={job.worker}\r\n        onChange={handleChange}\r\n        />\r\n\r\n        <label htmlforfor=\"date\">Date</label>\r\n        <input\r\n        id=\"date\"\r\n        type=\"date\"\r\n        name=\"date\"\r\n        value={job.date}\r\n        onChange={handleChange}\r\n        />\r\n\r\n        </fieldset>\r\n        <button type=\"submit\">submit</button>\r\n        <button type=\"button\" onClick={() => setJob({...initialJobState})}>cancel</button>\r\n    </form>\r\n    )}\r\n}\r\n\r\n\r\nexport default JobForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}