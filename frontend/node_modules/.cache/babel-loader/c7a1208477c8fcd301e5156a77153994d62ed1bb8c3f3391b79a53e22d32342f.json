{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\JobForm\\\\JobEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JobForm from \"./JobForm\";\nimport { updateJob, readJobs } from \"../utils/api\";\nimport Jobs from \"./JobRead\";\nimport JobList from \"./JobList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobEdit({\n  handleChange,\n  submitHandler\n}) {\n  _s();\n  const {\n    job_id\n  } = useParams();\n  const initialJobState = {\n    neighborhood: \"\",\n    picture: [],\n    worker: \"\",\n    date: \"\"\n  };\n  const [job, setJob] = useState({\n    ...initialJobState\n  });\n  const [base64URL, setBase64URL] = useState(\"\");\n  useEffect(() => {\n    const abortController = new AbortController();\n    //console.log(job_id)\n    readJobs(job_id, abortController.signal).then(dataArray => {\n      if (Array.isArray(dataArray) && dataArray.length > 0) {\n        // Assuming the job data is an object within the array\n        const fetchedJob = dataArray[0];\n        //console.log(\"edit\", fetchedJob);\n        setJob(fetchedJob);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching job:\", error);\n    });\n    return () => abortController.abort();\n  }, [job_id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Job:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(JobForm, {\n        job: job,\n        handleChange: handleChange,\n        submitHandler: submitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(JobEdit, \"oielvURm9RwCkcEH6pcan3iLbmY=\", false, function () {\n  return [useParams];\n});\n_c = JobEdit;\nvar _c;\n$RefreshReg$(_c, \"JobEdit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","JobForm","updateJob","readJobs","Jobs","JobList","jsxDEV","_jsxDEV","Fragment","_Fragment","JobEdit","handleChange","submitHandler","_s","job_id","initialJobState","neighborhood","picture","worker","date","job","setJob","base64URL","setBase64URL","abortController","AbortController","signal","then","dataArray","Array","isArray","length","fetchedJob","catch","error","console","abort","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/JobForm/JobEdit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport JobForm from \"./JobForm\";\r\nimport { updateJob, readJobs } from \"../utils/api\";\r\nimport Jobs from \"./JobRead\";\r\nimport JobList from \"./JobList\";\r\n\r\nexport default function JobEdit({ handleChange, submitHandler }){\r\n   const { job_id } = useParams() \r\n   const initialJobState = {\r\n        neighborhood: \"\",\r\n        picture: [],\r\n        worker: \"\",\r\n        date:\"\"\r\n      };\r\n      const [job, setJob] = useState({\r\n          ...initialJobState,\r\n        });\r\n      const [base64URL, setBase64URL] = useState(\"\")\r\n      \r\n      \r\n  \r\n        useEffect(() => {\r\n            const abortController = new AbortController()\r\n            //console.log(job_id)\r\n            readJobs(job_id, abortController.signal)\r\n            .then((dataArray) => {\r\n                if (Array.isArray(dataArray) && dataArray.length > 0) {\r\n                    // Assuming the job data is an object within the array\r\n                    const fetchedJob = dataArray[0];\r\n                    //console.log(\"edit\", fetchedJob);\r\n                    setJob(fetchedJob);\r\n            }})\r\n            .catch((error) => {\r\n                    console.error(\"Error fetching job:\", error);\r\n                });\r\n\r\n            return () => abortController.abort();\r\n        }, [job_id])\r\n  \r\n \r\n      \r\n\r\n    return (\r\n        <>\r\n        <section>\r\n            <h2>Edit Job:</h2>\r\n            <JobForm\r\n            job={job}\r\n            handleChange={handleChange}\r\n            submitHandler={submitHandler}\r\n            />\r\n        </section>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,OAAOA,CAAC;EAAEC,YAAY;EAAEC;AAAc,CAAC,EAAC;EAAAC,EAAA;EAC7D,MAAM;IAAEC;EAAO,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC9B,MAAMe,eAAe,GAAG;IACnBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAC;EACP,CAAC;EACD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGvB,QAAQ,CAAC;IAC3B,GAAGiB;EACL,CAAC,CAAC;EACJ,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAI5CC,SAAS,CAAC,MAAM;IACZ,MAAMyB,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC7C;IACAtB,QAAQ,CAACW,MAAM,EAAEU,eAAe,CAACE,MAAM,CAAC,CACvCC,IAAI,CAAEC,SAAS,IAAK;MACjB,IAAIC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,IAAIA,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;QAClD;QACA,MAAMC,UAAU,GAAGJ,SAAS,CAAC,CAAC,CAAC;QAC/B;QACAP,MAAM,CAACW,UAAU,CAAC;MAC1B;IAAC,CAAC,CAAC,CACFC,KAAK,CAAEC,KAAK,IAAK;MACVC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;IAEN,OAAO,MAAMV,eAAe,CAACY,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,CAACtB,MAAM,CAAC,CAAC;EAKhB,oBACIP,OAAA,CAAAE,SAAA;IAAA4B,QAAA,eACA9B,OAAA;MAAA8B,QAAA,gBACI9B,OAAA;QAAA8B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBlC,OAAA,CAACN,OAAO;QACRmB,GAAG,EAAEA,GAAI;QACTT,YAAY,EAAEA,YAAa;QAC3BC,aAAa,EAAEA;MAAc;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACR,CAAC;AAEX;AAAC5B,EAAA,CAhDuBH,OAAO;EAAA,QACTV,SAAS;AAAA;AAAA0C,EAAA,GADPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}