{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\JobForm\\\\JobEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readJobs } from \"../utils/api\";\nimport JobForm from \"./JobForm\";\nimport { updateJob } from \"../utils/api\";\nimport JobRead from \"./JobRead\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobEdit() {\n  _s();\n  const initialJobState = {\n    neighborhood: \"\",\n    picture: [],\n    worker: \"\",\n    date: \"\"\n  };\n  const [job, setJob] = useState({\n    ...initialJobState\n  });\n  const {\n    job_id\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readJobs(job_id, abortController.signal).then(setJob).then(console.log(job_id));\n    return abortController.abort();\n  }, [job_id]);\n  const handleChange = ({\n    target\n  }) => {\n    setJob({\n      ...job,\n      [target.name]: target.value\n    });\n  };\n  const submitHandler = async event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    await updateJob(job, abortController.signal);\n    console.log(\"it is working\", job);\n    return () => abortController.abort();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Job:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(JobForm, {\n        job: job,\n        handleChange: handleChange,\n        submitHandler: submitHandler,\n        setJob: setJob,\n        initialJobState: initialJobState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(JobRead, {\n        job: job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(JobEdit, \"59dVhfFIXX8EkK/u7++zZTN+jac=\", false, function () {\n  return [useParams];\n});\n_c = JobEdit;\nvar _c;\n$RefreshReg$(_c, \"JobEdit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","readJobs","JobForm","updateJob","JobRead","jsxDEV","_jsxDEV","Fragment","_Fragment","JobEdit","_s","initialJobState","neighborhood","picture","worker","date","job","setJob","job_id","abortController","AbortController","signal","then","console","log","abort","handleChange","target","name","value","submitHandler","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/JobForm/JobEdit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readJobs } from \"../utils/api\"\r\nimport JobForm from \"./JobForm\";\r\nimport { updateJob } from \"../utils/api\";\r\nimport JobRead from \"./JobRead\";\r\nexport default function JobEdit(){\r\n    const initialJobState = {\r\n        neighborhood: \"\",\r\n        picture: [],\r\n        worker: \"\",\r\n        date:\"\"\r\n      };\r\n      const [job, setJob] = useState({\r\n          ...initialJobState,\r\n        });\r\n      \r\n      const { job_id } = useParams()\r\n\r\n  \r\n        useEffect(() => {\r\n            const abortController = new AbortController()\r\n            readJobs(job_id, abortController.signal)\r\n                .then(setJob)\r\n                .then(console.log(job_id))\r\n            return abortController.abort()\r\n        }, [job_id])\r\n  \r\n  \r\n      const handleChange = ({ target }) => {\r\n  \r\n        setJob({\r\n    \r\n          ...job,\r\n    \r\n          [target.name]: target.value,\r\n    \r\n        });\r\n    \r\n      };\r\n  \r\n  const submitHandler = async (event) => {\r\n      event.preventDefault();\r\n      const abortController = new AbortController()\r\n      \r\n      await updateJob(job, abortController.signal);\r\n      \r\n      console.log(\"it is working\", job)\r\n      \r\n      return () => abortController.abort();\r\n    };\r\n    return (\r\n        <>\r\n        <section>\r\n            <h2>Edit Job:</h2>\r\n            <JobForm\r\n            job={job}\r\n            handleChange={handleChange}\r\n            submitHandler={submitHandler}\r\n            setJob={setJob}\r\n            initialJobState={initialJobState}\r\n            />\r\n        </section>\r\n        <section>\r\n            <JobRead \r\n            job={job}/>\r\n        </section>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChC,eAAe,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAC7B,MAAMC,eAAe,GAAG;IACpBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAC;EACP,CAAC;EACD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC;IAC3B,GAAGa;EACL,CAAC,CAAC;EAEJ,MAAM;IAAEO;EAAO,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAG5BD,SAAS,CAAC,MAAM;IACZ,MAAMoB,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC7CnB,QAAQ,CAACiB,MAAM,EAAEC,eAAe,CAACE,MAAM,CAAC,CACnCC,IAAI,CAACL,MAAM,CAAC,CACZK,IAAI,CAACC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC,CAAC;IAC9B,OAAOC,eAAe,CAACM,KAAK,CAAC,CAAC;EAClC,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAGd,MAAMQ,YAAY,GAAGA,CAAC;IAAEC;EAAO,CAAC,KAAK;IAEnCV,MAAM,CAAC;MAEL,GAAGD,GAAG;MAEN,CAACW,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;IAExB,CAAC,CAAC;EAEJ,CAAC;EAEL,MAAMC,aAAa,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMb,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;IAE7C,MAAMjB,SAAS,CAACa,GAAG,EAAEG,eAAe,CAACE,MAAM,CAAC;IAE5CE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,GAAG,CAAC;IAEjC,OAAO,MAAMG,eAAe,CAACM,KAAK,CAAC,CAAC;EACtC,CAAC;EACD,oBACInB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACA3B,OAAA;MAAA2B,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB/B,OAAA,CAACJ,OAAO;QACRc,GAAG,EAAEA,GAAI;QACTU,YAAY,EAAEA,YAAa;QAC3BI,aAAa,EAAEA,aAAc;QAC7Bb,MAAM,EAAEA,MAAO;QACfN,eAAe,EAAEA;MAAgB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACV/B,OAAA;MAAA2B,QAAA,eACI3B,OAAA,CAACF,OAAO;QACRY,GAAG,EAAEA;MAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACR,CAAC;AAEX;AAAC3B,EAAA,CA/DuBD,OAAO;EAAA,QAWNT,SAAS;AAAA;AAAAsC,EAAA,GAXV7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}