{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\list\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listJobs } from \"../utils/api\";\nimport JobList from \"../JobForm/JobList\";\nimport JobEdit from \"../JobForm/JobEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobMenu() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [base64URL, setBase64URL] = useState(\"\");\n  useEffect(loadJobs, []);\n  function loadJobs() {\n    const abortController = new AbortController();\n    listJobs(abortController.signal).then(setJobs);\n    return () => abortController.abort();\n  }\n  async function handleChange({\n    target\n  }) {\n    if (target === \"picture\") {\n      const file = target.files[0];\n      const base64DataURL = await convertToBase64URL(file);\n      setBase64URL(base64DataURL);\n    } else {\n      setJob({\n        ...job,\n        [target.name]: target.value\n      });\n    }\n  }\n  ;\n  const submitHandler = async event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    try {\n      //console.log(job)\n      await updateJob(job, job_id, abortController.signal);\n      console.log(\"Job updated\");\n\n      // Additional handling for the updated job, if needed\n    } catch (error) {\n      console.error(\"Error updating job:\", error);\n    }\n    return () => abortController.abort();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/jobs/new\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"links\",\n          children: \"New Listing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(JobEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(JobList, {\n        jobs: jobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(JobMenu, \"24GcfYWpqOlKiF4ZmcXg/0JbIBU=\");\n_c = JobMenu;\nvar _c;\n$RefreshReg$(_c, \"JobMenu\");","map":{"version":3,"names":["React","useEffect","useState","Link","listJobs","JobList","JobEdit","jsxDEV","_jsxDEV","Fragment","_Fragment","JobMenu","_s","jobs","setJobs","base64URL","setBase64URL","loadJobs","abortController","AbortController","signal","then","abort","handleChange","target","file","files","base64DataURL","convertToBase64URL","setJob","job","name","value","submitHandler","event","preventDefault","updateJob","job_id","console","log","error","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/list/Menu.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listJobs } from \"../utils/api\";\r\nimport JobList from \"../JobForm/JobList\"\r\nimport JobEdit from \"../JobForm/JobEdit\";\r\n\r\nexport default function JobMenu(){\r\n\r\n\r\n    const [jobs, setJobs] = useState([]);\r\n    const [base64URL, setBase64URL] = useState(\"\")\r\n\r\n    useEffect(loadJobs, [])\r\n    function loadJobs(){\r\n      const abortController = new AbortController();\r\n  \r\n      listJobs(abortController.signal)\r\n        .then(setJobs)\r\n\r\n      return () => abortController.abort()\r\n      }\r\n\r\n      async function handleChange ({ target }) {\r\n        if(target === \"picture\"){\r\n            const file = target.files[0]\r\n            const base64DataURL = await convertToBase64URL(file)   \r\n            setBase64URL(base64DataURL);\r\n            \r\n        }else{\r\n            setJob({\r\n                ...job,\r\n                [target.name]: target.value,\r\n        });\r\n        }\r\n        \r\n    \r\n      };\r\n  \r\n  const submitHandler = async (event) => {\r\n      event.preventDefault();\r\n      const abortController = new AbortController()\r\n      \r\n      try {\r\n        //console.log(job)\r\n        await updateJob(job, job_id, abortController.signal);\r\n\r\n        console.log(\"Job updated\");\r\n\r\n        // Additional handling for the updated job, if needed\r\n    } catch (error) {\r\n        console.error(\"Error updating job:\", error);\r\n    } \r\n        return () => abortController.abort();\r\n    \r\n    };\r\n \r\n\r\n    return(\r\n        <>\r\n        <div>\r\n          <Link to={\"/jobs/new\"}><div className=\"links\">New Listing</div></Link>\r\n        </div>\r\n        <section>\r\n          <JobEdit\r\n\r\n          />\r\n        </section>\r\n        <div>\r\n          <JobList\r\n          jobs={jobs}\r\n          />\r\n        </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}