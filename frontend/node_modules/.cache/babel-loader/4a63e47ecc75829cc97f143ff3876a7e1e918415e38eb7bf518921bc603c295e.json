{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\JobForm\\\\JobList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Buffer } from \"buffer\";\n\n//URL.createObjectURL(new Blob([Buffer.from(\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const JobList = ({\n  jobs,\n  url\n}) => {\n  function createObjectURLFromBase64(base64Data) {\n    const blob = new Blob([base64Data], {\n      type: \"image/png\"\n    }); // Adjust the MIME type if needed\n    return URL.createObjectURL(blob);\n  }\n  if (jobs.length) {\n    return jobs.map((job, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"listing\",\n              children: job.neighborhood\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"listing\",\n                alt: \"waiting\",\n                src: createObjectURL(job.picture[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 19\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"listing\",\n              children: job.worker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"listing\",\n              children: job.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/jobs/${job.job_id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"links\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    });\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No Jobs Listed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n};\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","Link","Buffer","jsxDEV","_jsxDEV","Fragment","_Fragment","JobList","jobs","url","createObjectURLFromBase64","base64Data","blob","Blob","type","URL","createObjectURL","length","map","job","index","children","className","neighborhood","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","picture","worker","date","to","job_id","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/JobForm/JobList.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Buffer } from \"buffer\";\r\n\r\n//URL.createObjectURL(new Blob([Buffer.from(\r\nexport const JobList = ({ jobs, url }) => {\r\n  function createObjectURLFromBase64(base64Data) {\r\n    const blob = new Blob([base64Data], { type: \"image/png\" }); // Adjust the MIME type if needed\r\n    return URL.createObjectURL(blob);\r\n  }\r\n \r\n  if(jobs.length){\r\n    return jobs.map((job, index) => {\r\n        return (\r\n          <>\r\n            <ul className=\"list\">\r\n              <li key={index}>\r\n                <p className=\"listing\">{job.neighborhood}</p>\r\n                <><img className=\"listing\" alt=\"waiting\" src={createObjectURL(job.picture[0])}/></>\r\n                <p className=\"listing\">{job.worker}</p>\r\n                <p className=\"listing\">{job.date}</p>\r\n              <Link\r\n              to={`/jobs/${job.job_id}/edit`}>\r\n              <div className=\"links\">Edit</div>\r\n              </Link>\r\n              </li>\r\n            </ul>\r\n          </>\r\n        )\r\n    })  \r\n    }else{\r\n      return(\r\n        <div>\r\n          <h4>No Jobs Listed</h4>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default JobList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAI,CAAC,KAAK;EACxC,SAASC,yBAAyBA,CAACC,UAAU,EAAE;IAC7C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAY,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAOC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;EAClC;EAEA,IAAGJ,IAAI,CAACS,MAAM,EAAC;IACb,OAAOT,IAAI,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC5B,oBACEhB,OAAA,CAAAE,SAAA;QAAAe,QAAA,eACEjB,OAAA;UAAIkB,SAAS,EAAC,MAAM;UAAAD,QAAA,eAClBjB,OAAA;YAAAiB,QAAA,gBACEjB,OAAA;cAAGkB,SAAS,EAAC,SAAS;cAAAD,QAAA,EAAEF,GAAG,CAACI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7CvB,OAAA,CAAAE,SAAA;cAAAe,QAAA,eAAEjB,OAAA;gBAAKkB,SAAS,EAAC,SAAS;gBAACM,GAAG,EAAC,SAAS;gBAACC,GAAG,EAAEb,eAAe,CAACG,GAAG,CAACW,OAAO,CAAC,CAAC,CAAC;cAAE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAC,gBAAE,CAAC,eACnFvB,OAAA;cAAGkB,SAAS,EAAC,SAAS;cAAAD,QAAA,EAAEF,GAAG,CAACY;YAAM;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvCvB,OAAA;cAAGkB,SAAS,EAAC,SAAS;cAAAD,QAAA,EAAEF,GAAG,CAACa;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvCvB,OAAA,CAACH,IAAI;cACLgC,EAAE,EAAG,SAAQd,GAAG,CAACe,MAAO,OAAO;cAAAb,QAAA,eAC/BjB,OAAA;gBAAKkB,SAAS,EAAC,OAAO;gBAAAD,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA,GAREP,KAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,gBACL,CAAC;IAET,CAAC,CAAC;EACF,CAAC,MAAI;IACH,oBACEvB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEV;AAEJ,CAAC;AAAAQ,EAAA,GAjCY5B,OAAO;AAoCpB,eAAeA,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}