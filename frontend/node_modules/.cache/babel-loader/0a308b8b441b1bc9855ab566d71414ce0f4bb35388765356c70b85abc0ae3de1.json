{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\JobForm\\\\JobEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport JobForm from \"./JobForm\";\nimport { updateJob, readJobs, convertToBase64URL } from \"../utils/api\";\nimport Jobs from \"./JobRead\";\nimport JobList from \"./JobList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobEdit() {\n  _s();\n  const initialJobState = {\n    neighborhood: \"\",\n    picture: [],\n    worker: \"\",\n    date: \"\"\n  };\n  const {\n    job_id\n  } = useParams();\n  const [base64URL, setBase64URL] = useState(\"\");\n  const [job, setJob] = useState({\n    ...initialJobState\n  });\n  const history = useNavigate();\n  async function handleChange({\n    target\n  }) {\n    if (target === \"picture\") {\n      const file = target.files[0];\n      if (file) {\n        const base64DataURL = await convertToBase64URL(file);\n        setBase64URL(base64DataURL);\n      }\n    } else {\n      setJob({\n        ...job,\n        [target.name]: target.value\n      });\n    }\n  }\n  ;\n  const submitHandler = async event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    try {\n      //console.log(job)\n      await updateJob(job, job_id, abortController.signal).then(history('/jobs'));\n      console.log(\"Job updated\");\n\n      // Additional handling for the updated job, if needed\n    } catch (error) {\n      console.error(\"Error updating job:\", error);\n    }\n    return () => abortController.abort();\n  };\n  useEffect(() => {\n    const abortController = new AbortController();\n    //console.log(job_id)\n    readJobs(job_id, abortController.signal).then(dataArray => {\n      if (Array.isArray(dataArray) && dataArray.length > 0) {\n        // Assuming the job data is an object within the array\n        const fetchedJob = dataArray[0];\n        //console.log(\"edit\", fetchedJob);\n        setJob(fetchedJob);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching job:\", error);\n    });\n    return () => abortController.abort();\n  }, [job_id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"titles\",\n        children: \"Edit Job:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(JobForm, {\n        job: job,\n        handleChange: handleChange,\n        submitHandler: submitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Jobs, {\n        url: base64URL,\n        job: job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(JobEdit, \"qyXcyj2c+hM6t4JjtQSXfJIm1Gc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = JobEdit;\nvar _c;\n$RefreshReg$(_c, \"JobEdit\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","JobForm","updateJob","readJobs","convertToBase64URL","Jobs","JobList","jsxDEV","_jsxDEV","Fragment","_Fragment","JobEdit","_s","initialJobState","neighborhood","picture","worker","date","job_id","base64URL","setBase64URL","job","setJob","history","handleChange","target","file","files","base64DataURL","name","value","submitHandler","event","preventDefault","abortController","AbortController","signal","then","console","log","error","abort","dataArray","Array","isArray","length","fetchedJob","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","url","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/JobForm/JobEdit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport JobForm from \"./JobForm\";\r\nimport { updateJob, readJobs, convertToBase64URL } from \"../utils/api\";\r\nimport Jobs from \"./JobRead\";\r\nimport JobList from \"./JobList\";\r\n\r\nexport default function JobEdit(){\r\n    const initialJobState = {\r\n        neighborhood: \"\",\r\n        picture: [],\r\n        worker: \"\",\r\n        date:\"\"\r\n      };\r\n   const { job_id } = useParams() \r\n   const [base64URL, setBase64URL] = useState(\"\")\r\n   const [job, setJob] = useState({\r\n    ...initialJobState,\r\n  });\r\n  const history = useNavigate()\r\n\r\n   async function handleChange ({ target }) {\r\n    if(target === \"picture\"){\r\n        const file = target.files[0]\r\n        if(file){\r\n        const base64DataURL = await convertToBase64URL(file)   \r\n        setBase64URL(base64DataURL);  \r\n        }\r\n        \r\n        \r\n    }else{\r\n        setJob({\r\n            ...job,\r\n            [target.name]: target.value,\r\n    });\r\n    }\r\n  };\r\n\r\nconst submitHandler = async (event) => {\r\n  event.preventDefault();\r\n  const abortController = new AbortController()\r\n  \r\n  try {\r\n    //console.log(job)\r\n    await updateJob(job, job_id, abortController.signal)\r\n    .then(history('/jobs'))\r\n    console.log(\"Job updated\");\r\n\r\n    // Additional handling for the updated job, if needed\r\n} catch (error) {\r\n    console.error(\"Error updating job:\", error);\r\n} \r\n    return () => abortController.abort();\r\n};\r\n\r\nuseEffect(() => {\r\n    const abortController = new AbortController()\r\n    //console.log(job_id)\r\n    readJobs(job_id, abortController.signal)\r\n    .then((dataArray) => {\r\n        if (Array.isArray(dataArray) && dataArray.length > 0) {\r\n            // Assuming the job data is an object within the array\r\n            const fetchedJob = dataArray[0];\r\n            //console.log(\"edit\", fetchedJob);\r\n            setJob(fetchedJob);\r\n    }})\r\n    .catch((error) => {\r\n            console.error(\"Error fetching job:\", error);\r\n        });\r\n\r\n    return () => abortController.abort();\r\n}, [job_id])\r\n  \r\n \r\n      \r\n\r\n    return (\r\n        <>\r\n        <section>\r\n            <h2 className=\"titles\">Edit Job:</h2>\r\n            <JobForm\r\n            job={job}\r\n            handleChange={handleChange}\r\n            submitHandler={submitHandler}/>\r\n        </section>\r\n        <section>\r\n            <Jobs\r\n            url={base64URL}\r\n            job={job}/>\r\n        </section>\r\n        \r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}