{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parad\\\\Programming\\\\PetProjects\\\\tile_website\\\\frontend\\\\src\\\\JobForm\\\\NewJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport JobForm from \"./JobForm\";\nimport JobList from \"./JobList\";\nimport { listJobs } from \"../utils/api\";\nimport { createJobs } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobNew = () => {\n  _s();\n  const initialJobState = {\n    neighborhood: \"\",\n    picture: [],\n    worker: \"\",\n    date: \"\"\n  };\n  const [job, setJob] = useState({\n    ...initialJobState\n  });\n  const [jobs, setJobs] = useState([]);\n  useEffect(loadJobs);\n  function loadJobs() {\n    const abortController = new AbortController();\n    listJobs(abortController.signal).then(setJobs);\n    return () => abortController.abort();\n  }\n  const createJob = newJob => setJobs(currentJobs => [newJob, ...currentJobs]);\n  const handleChange = ({\n    target\n  }) => {\n    setJob({\n      ...job,\n      [target.name]: target.value\n    });\n  };\n  const submitHandler = async event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n    await createJobs(job, abortController.signal);\n    console.log(\"it is working\", jobs);\n    return () => abortController.abort();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Job Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(JobForm, {\n        job: job,\n        handleChange: handleChange,\n        submitHandler: submitHandler,\n        setJob: setJob,\n        initialJobState: initialJobState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Job Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(JobList, {\n        data: job,\n        jobs: jobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n/*const submitHandler = (event) => {\r\n  event.preventDefault();\r\n  const abortController = new AbortController()\r\n  console.log(\"it is working\", jobs)\r\n  createJob(job)\r\n  setJob({...initialJobState})\r\n};*/\n_s(JobNew, \"ymJXn5BjdY/TBjwI4FnZ6fQDrNM=\");\n_c = JobNew;\nexport default JobNew;\nvar _c;\n$RefreshReg$(_c, \"JobNew\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","JobForm","JobList","listJobs","createJobs","jsxDEV","_jsxDEV","JobNew","_s","initialJobState","neighborhood","picture","worker","date","job","setJob","jobs","setJobs","loadJobs","abortController","AbortController","signal","then","abort","createJob","newJob","currentJobs","handleChange","target","name","value","submitHandler","event","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["C:/Users/parad/Programming/PetProjects/tile_website/frontend/src/JobForm/NewJob.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport JobForm from \"./JobForm\";\r\nimport JobList from \"./JobList\";\r\nimport { listJobs } from \"../utils/api\";\r\nimport { createJobs } from \"../utils/api\"\r\nexport const JobNew = () => {\r\n    const initialJobState = {\r\n      neighborhood: \"\",\r\n      picture: [],\r\n      worker: \"\",\r\n      date:\"\"\r\n    };\r\n    const [job, setJob] = useState({\r\n        ...initialJobState,\r\n      });\r\n    const [jobs, setJobs] = useState([])\r\n    useEffect(loadJobs)\r\n    function loadJobs(){\r\n      const abortController = new AbortController();\r\n  \r\n      listJobs(abortController.signal)\r\n        .then(setJobs)\r\n\r\n      return () => abortController.abort()\r\n      }\r\n\r\n    const createJob = (newJob) =>\r\n\r\n    setJobs((currentJobs) => [\r\n\r\n      newJob,\r\n\r\n      ...currentJobs,\r\n\r\n    ]);\r\n\r\n    const handleChange = ({ target }) => {\r\n\r\n      setJob({\r\n  \r\n        ...job,\r\n  \r\n        [target.name]: target.value,\r\n  \r\n      });\r\n  \r\n    };\r\n\r\nconst submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const abortController = new AbortController()\r\n    \r\n    await createJobs(job, abortController.signal);\r\n    \r\n    console.log(\"it is working\", jobs)\r\n    \r\n    return () => abortController.abort();\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <section>\r\n      <h2>Job Entry</h2>\r\n      <JobForm\r\n        job={job}\r\n        handleChange={handleChange}\r\n        submitHandler={submitHandler}\r\n        setJob={setJob}\r\n        initialJobState={initialJobState}\r\n      />\r\n    </section>\r\n    <section>\r\n      <h3>Job Listing</h3>\r\n      <JobList\r\n       data={job}\r\n       jobs={jobs}\r\n      />\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/*const submitHandler = (event) => {\r\n  event.preventDefault();\r\n  const abortController = new AbortController()\r\n  console.log(\"it is working\", jobs)\r\n  createJob(job)\r\n  setJob({...initialJobState})\r\n};*/\r\n\r\nexport default JobNew"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}